definitions:
  app.Pager:
    properties:
      page:
        type: integer
      page_size:
        type: integer
      total_size:
        type: integer
    type: object
  errcode.Error:
    type: object
  model.Auth:
    properties:
      created_by:
        type: string
      created_on:
        type: integer
      deleted_on:
        type: integer
      id:
        type: integer
      is_del:
        type: integer
      name:
        type: string
      password:
        type: string
    type: object
  model.Comment:
    properties:
      agree:
        type: integer
      content:
        type: string
      created_by:
        type: string
      created_on:
        type: integer
      deleted_on:
        type: integer
      disagree:
        type: integer
      id:
        type: integer
      is_del:
        type: integer
      post_id:
        type: integer
    type: object
  model.CommentSwagger:
    properties:
      list:
        items:
          $ref: '#/definitions/model.Comment'
        type: array
      pager:
        $ref: '#/definitions/app.Pager'
    type: object
  model.Post:
    properties:
      id:
        type: integer
      is_del:
        type: integer
      title:
        type: string
      user_id:
        type: integer
    type: object
  service.CreatePostRequest:
    properties:
      title:
        type: string
      user_id:
        type: integer
    required:
    - title
    - user_id
    type: object
  v1.PostCreateResponse:
    properties:
      post_id:
        type: integer
    type: object
  v1.PostListResponse:
    properties:
      posts:
        items:
          $ref: '#/definitions/model.Post'
        type: array
      total_pages:
        type: integer
    type: object
  v1.Token:
    properties:
      token:
        type: string
    type: object
info:
  contact: {}
  title: forum
  version: "0.01"
paths:
  /api/v1/comments/:
    post:
      parameters:
      - description: comment content
        in: body
        name: content
        required: true
        schema:
          type: string
      - description: creator id
        in: body
        name: createdby
        required: true
        schema:
          type: integer
      - description: post id
        in: body
        name: postid
        required: true
        schema:
          type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/model.Comment'
        "400":
          description: request error
          schema:
            $ref: '#/definitions/errcode.Error'
        "500":
          description: server error
          schema:
            $ref: '#/definitions/errcode.Error'
      summary: create comment
  /api/v1/comments/{id}:
    delete:
      parameters:
      - description: comment id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/model.Comment'
        "400":
          description: request error
          schema:
            $ref: '#/definitions/errcode.Error'
        "500":
          description: server error
          schema:
            $ref: '#/definitions/errcode.Error'
      summary: delete comment need adm cookie
  /api/v1/comments/{post_id}:
    get:
      parameters:
      - description: post id
        in: path
        name: id
        required: true
        type: integer
      - description: page number
        in: query
        name: page
        type: integer
      - description: page size
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/model.CommentSwagger'
        "400":
          description: request error
          schema:
            $ref: '#/definitions/errcode.Error'
        "500":
          description: server error
          schema:
            $ref: '#/definitions/errcode.Error'
      summary: get comment list with post id
  /api/v1/posts:
    get:
      parameters:
      - description: Page number
        in: query
        name: page
        required: true
        type: integer
      - description: Page size
        in: query
        name: page_size
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/v1.PostListResponse'
      summary: Get a post list with pagination settings.
    post:
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.CreatePostRequest'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/v1.PostCreateResponse'
      summary: create post
  /api/v1/posts/{id}:
    delete:
      parameters:
      - description: post id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/model.Post'
      summary: delete post need adm cookie
    get:
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Post data
          schema:
            $ref: '#/definitions/model.Post'
      summary: Get a post by id
  /auth:
    get:
      parameters:
      - description: user name
        in: query
        name: uname
        type: integer
      - description: user password
        in: query
        name: upassword
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/v1.Token'
        "400":
          description: request error
          schema:
            $ref: '#/definitions/errcode.Error'
        "500":
          description: server error
          schema:
            $ref: '#/definitions/errcode.Error'
      summary: auth and get token
    post:
      parameters:
      - description: user name
        in: query
        name: uname
        type: integer
      - description: user password
        in: query
        name: upassword
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/model.Auth'
        "400":
          description: request error
          schema:
            $ref: '#/definitions/errcode.Error'
        "500":
          description: server error
          schema:
            $ref: '#/definitions/errcode.Error'
      summary: get add user
swagger: "2.0"
