definitions:
  model.Comment:
    properties:
      content:
        type: string
      id:
        type: integer
      is_del:
        type: boolean
      post_id:
        type: integer
      user_id:
        type: string
    type: object
  model.Post:
    properties:
      id:
        type: integer
      is_del:
        type: integer
      title:
        type: string
      user_id:
        type: integer
    type: object
  service.CreateCommentRequest:
    properties:
      content:
        type: string
      post_id:
        type: integer
      user_id:
        type: string
    required:
    - content
    - user_id
    type: object
  service.CreatePostRequest:
    properties:
      title:
        type: string
      user_id:
        type: integer
    required:
    - title
    - user_id
    type: object
  service.LoginRequest:
    properties:
      id:
        type: string
      password:
        type: string
    required:
    - id
    - password
    type: object
  service.RegisterRequest:
    properties:
      id:
        type: string
      password:
        type: string
    required:
    - id
    - password
    type: object
  v1.CommentListResponse:
    properties:
      comments:
        items:
          $ref: '#/definitions/model.Comment'
        type: array
      total_pages:
        type: integer
    type: object
  v1.LoginResponse:
    properties:
      token:
        type: string
    type: object
  v1.MessageResponse:
    properties:
      msg:
        type: string
    type: object
  v1.PostCreateResponse:
    properties:
      post_id:
        type: integer
    type: object
  v1.PostListResponse:
    properties:
      posts:
        items:
          $ref: '#/definitions/model.Post'
        type: array
      total_pages:
        type: integer
    type: object
info:
  contact: {}
  title: forum
  version: "0.01"
paths:
  /account/delete/{id}:
    delete:
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/v1.MessageResponse'
      summary: Delete an account.
  /account/login:
    post:
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/v1.LoginResponse'
      summary: Log in.
  /account/register:
    post:
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/v1.MessageResponse'
      summary: Register.
  /api/v1/comments/{post_id}:
    get:
      parameters:
      - description: post id
        in: path
        name: post_id
        required: true
        type: integer
      - description: page number
        in: query
        name: page
        required: true
        type: integer
      - description: page size
        in: query
        name: page_size
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/v1.CommentListResponse'
      summary: Get a comment list by the post id.
    post:
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.CreateCommentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/v1.MessageResponse'
      summary: Comment a post.
  /api/v1/comments/{post_id}/{id}:
    delete:
      parameters:
      - description: post id
        in: path
        name: post_id
        required: true
        type: integer
      - description: comment id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/v1.MessageResponse'
      summary: Delete a comment.
  /api/v1/posts:
    get:
      parameters:
      - description: Page number
        in: query
        name: page
        required: true
        type: integer
      - description: Page size
        in: query
        name: page_size
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/v1.PostListResponse'
      summary: Get a post list with pagination settings.
    post:
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.CreatePostRequest'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/v1.PostCreateResponse'
      summary: create post
  /api/v1/posts/{id}:
    delete:
      parameters:
      - description: post id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/model.Post'
      summary: Delete a post.
    get:
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Post data
          schema:
            $ref: '#/definitions/model.Post'
      summary: Get a post by id
swagger: "2.0"
